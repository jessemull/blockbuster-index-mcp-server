AWSTemplateFormatVersion: '2010-09-09'
Description: 'ECS Task Definition and Scheduled Rule.'

Mappings:
  EnvConfig:
    dev:
      Subnets:
        - subnet-02ce757a
        - subnet-2655df7b
        - subnet-e22085a8
        - subnet-badfdd91
      SecurityGroups:
        - sg-09812900f87093af6
      S3BucketName: 'blockbuster-index-client-dev'
      LogLevel: 'info'
    prod:
      Subnets:
        - subnet-02ce757a
        - subnet-2655df7b
        - subnet-e22085a8
        - subnet-badfdd91
      SecurityGroups:
        - sg-08bcf61562fda9041
      S3BucketName: 'blockbuster-index-client-prod'
      LogLevel: 'warn'

Conditions:
  IsDev: !Equals [!Ref Environment, 'dev']

Parameters:
  Environment:
    Type: String
    Default: 'dev'
    AllowedValues:
      - dev
      - prod

  ContainerImage:
    Type: String
    Description: 'ECR image URI or container image for the ECS task'

  ScheduleExpression:
    Type: String
    Default: 'rate(1 day)'
    Description: 'EventBridge schedule expression (cron or rate)'

Resources:
  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub 'blockbuster-index-task-${Environment}'
      Cpu: '512'
      Memory: '1024'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !ImportValue
        Fn::Sub: '${Environment}-BlockbusterExecutionRoleArn'
      TaskRoleArn: !ImportValue
        Fn::Sub: '${Environment}-BlockbusterTaskRoleArn'
      ContainerDefinitions:
        - Name: blockbuster-index-container
          Image: !Ref ContainerImage
          Cpu: 512
          Memory: 1024
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !ImportValue
                Fn::Sub: '${Environment}-BlockbusterLogGroupName'
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: 'blockbuster-index'
          Environment:
            - Name: AMAZON_DYNAMODB_TABLE_NAME
              Value: !Sub 'blockbuster-index-amazon-jobs-${Environment}'
            - Name: AWS_REGION
              Value: !Ref AWS::Region
            - Name: CACHE_CONTROL
              Value: 'max-age=300'
            - Name: CENSUS_DYNAMODB_TABLE_NAME
              Value: !Sub 'blockbuster-index-census-signals-${Environment}'
            - Name: CW_LOG_GROUP
              Value: !ImportValue
                Fn::Sub: '${Environment}-BlockbusterLogGroupName'
            - Name: CW_LOG_STREAM
              Value: !Sub 'blockbuster-index-mcp-${Environment}-${AWS::StackName}'
            - Name: LOG_LEVEL
              Value: !FindInMap [EnvConfig, !Ref Environment, LogLevel]
            - Name: MAX_RETRIES
              Value: '3'
            - Name: NODE_ENV
              Value: !If [IsDev, 'development', 'production']
            - Name: npm_package_version
              Value: '1.0.0'
            - Name: OPENAI_API_KEY
              Value: !Sub '{{resolve:secretsmanager:blockbuster-index-openai-${Environment}:SecretString:apiKey}}'
            - Name: RETRY_DELAY
              Value: '1000'
            - Name: S3_BUCKET_NAME
              Value: !FindInMap [EnvConfig, !Ref Environment, S3BucketName]

  ScheduledTaskRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub 'blockbuster-index-scheduled-task-rule-${Environment}'
      ScheduleExpression: !Ref ScheduleExpression
      State: ENABLED
      Targets:
        - Arn: !ImportValue
            Fn::Sub: '${Environment}-BlockbusterECSClusterArn'
          Id: 'BlockbusterIndexECSTask'
          RoleArn: !ImportValue
            Fn::Sub: '${Environment}-BlockbusterEventBridgeInvokeRoleArn'
          EcsParameters:
            TaskDefinitionArn: !Ref ECSTaskDefinition
            TaskCount: 1
            LaunchType: FARGATE
            NetworkConfiguration:
              AwsVpcConfiguration:
                AssignPublicIp: ENABLED
                SecurityGroups:
                  !FindInMap [EnvConfig, !Ref Environment, SecurityGroups]
                Subnets: !FindInMap [EnvConfig, !Ref Environment, Subnets]

Outputs:
  ECSTaskDefinitionArn:
    Description: 'ECS Task Definition ARN'
    Value: !Ref ECSTaskDefinition
  S3BucketName:
    Description: 'S3 Bucket Name for data storage'
    Value: !FindInMap [EnvConfig, !Ref Environment, S3BucketName]
